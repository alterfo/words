// Generated by CoffeeScript 1.10.0
(function() {
  var LocalStrategy, User, jwt, passport, secret;

  passport = require('passport');

  LocalStrategy = require('passport-local').Strategy;

  User = require('mongoose').model('User');

  jwt = require('jsonwebtoken');

  secret = require('./../secret').localtokensecret;

  module.exports = function() {
    passport.use('local-token', new LocalStrategy({
      usernameField: 'username',
      passwordField: 'password'
    }, function(username, password, done) {
      User.findOne({
        username: username
      }, function(err, user) {
        var tokenPayload;
        if (err) {
          return done(err);
        }
        if (!user) {
          return done(null, false, {
            message: 'Неизвестный пользователь'
          });
        }
        if (!user.authenticate(password)) {
          return done(null, false, {
            message: 'Невалидный пароль'
          });
        }
        tokenPayload = {
          username: user.username,
          loginExpires: user.loginExpires
        };
        user.loginToken = jwt.sign(tokenPayload, secret);
        user.loginExpires = Date.now() + (2 * 60 * 60 * 1000);
        return user.save(function(err) {
          if (err) {
            done(err);
          } else {
            done(null, user);
          }
        });
      });
    }));
  };

}).call(this);

//# sourceMappingURL=local-token.js.map
