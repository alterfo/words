'use strict'
_ = require('lodash')
mongoose = require('mongoose')
User = mongoose.model('User')

exports.userByID = (req, res, next, id) ->
	User.findOne(_id: id).exec (err, user) ->
		if err
			return next(err)
		if !user
			return next(new Error('Failed to load User ' + id))
		req.profile = user
		next()
		return
	return

exports.requiresLogin = (req, res, next) ->
	if !req.isAuthenticated()
		return res.status(401).send(message: 'User is not logged in')
	next()
	return

exports.requiresLoginToken = (req, res, next) ->
	loginToken = req.body.loginToken
	User.findOne
		loginToken: loginToken
		loginExpires:
			$gt: Date.now()
	, (err, user) ->
			if not user
				return res.status(401).send
					message: 'Неправильный токен или срок действия истек, залогиньтесь снова.'
			if err
				return res.status(500).send
					message: 'Произошла внутренняя ошибка сервера. Сообщите разработчикам по адресу kalinon7@gmail.com.'
			req.user = user
			next()


exports.hasAuthorization = (roles) ->
	_this = this
	(req, res, next) ->
		_this.requiresLogin req, res, ->
			if _.intersection(req.user.roles, roles).length
				next()
			else
				res.status(403).send message: 'User is not authorized'
		return

# ---
# generated by js2coffee 2.1.0
