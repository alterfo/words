// Generated by CoffeeScript 1.9.3
(function() {
  angular.module('core').factory("WebApiService", [
    '$http', '$q', function($http, $q) {
      var WebApiService;
      return new (WebApiService = (function() {
        WebApiService.prototype.timelineCache = [];

        function WebApiService() {
          return;
        }

        WebApiService.prototype.getToday = function() {
          return $http.get('/today');
        };

        WebApiService.prototype.getText = function(dateString) {
          return $http.get('/text/' + dateString);
        };

        WebApiService.prototype.fetchTimeline = function(dateString, callback) {
          var days, daysN, def, today, working_date;
          def = $q.defer();
          if (this.timelineCache[dateString]) {
            callback && callback(this.timelineCache[dateString]);
            def.resolve();
            return def.promise;
          }
          working_date = dateString.yyyymmToDate();
          today = new Date();
          daysN = working_date.daysInMonth();
          days = (function() {
            var i, ref, results;
            results = [];
            for (i = 1, ref = daysN - 1; 1 <= ref ? i <= ref : i >= ref; 1 <= ref ? i++ : i--) {
              results.push('--');
            }
            return results;
          })();
          $http.get('/texts/' + dateString).then((function(_this) {
            return function(response) {
              var limit, ref;
              if (working_date.isCurrentMonth()) {
                limit = today.getDate();
              }
              if (working_date.isLessThenCurrentMonth()) {
                limit = daysN;
              }
              if (limit) {
                [].splice.apply(days, [0, (limit - 2) - 0 + 1].concat(ref = (function() {
                  var i, ref1, results;
                  results = [];
                  for (i = 1, ref1 = limit; 1 <= ref1 ? i <= ref1 : i >= ref1; 1 <= ref1 ? i++ : i--) {
                    results.push(0);
                  }
                  return results;
                })())), ref;
              }
              response.data.forEach(function(e) {
                days[(new Date(e.date)).getDate() - 1] = e.counter;
              });
              if (!working_date.isCurrentMonth()) {
                _this.timelineCache[dateString] = days;
              }
              callback && callback(days);
              return def.resolve();
            };
          })(this));
          return def.promise;
        };

        WebApiService.prototype.postText = function(textString) {
          var def;
          def = $q.defer();
          if (textString === void 0) {
            def.reject('Вы ничего не ввели');
            return def.promise;
          }
          return $http.post('/texts', {
            text: textString,
            date: Date.now(),
            counter: textString.trim().split(/\s+/).length
          });
        };

        return WebApiService;

      })());
    }
  ]);

}).call(this);

//# sourceMappingURL=WebApi.client.service.js.map
