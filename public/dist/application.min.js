"use strict";var ApplicationConfiguration=function(){var applicationModuleName="mean",applicationModuleVendorDependencies=["ngResource","ngCookies","ngAnimate","ngTouch","ngSanitize","ui.router","ui.bootstrap","ui.utils"],registerModule=function(moduleName,dependencies){angular.module(moduleName,dependencies||[]),angular.module(applicationModuleName).requires.push(moduleName)};return{applicationModuleName:applicationModuleName,applicationModuleVendorDependencies:applicationModuleVendorDependencies,registerModule:registerModule}}();angular.module(ApplicationConfiguration.applicationModuleName,ApplicationConfiguration.applicationModuleVendorDependencies),angular.module(ApplicationConfiguration.applicationModuleName).config(["$locationProvider",function($locationProvider){$locationProvider.hashPrefix("!")}]),angular.element(document).ready(function(){"#_=_"===window.location.hash&&(window.location.hash="#!"),angular.bootstrap(document,[ApplicationConfiguration.applicationModuleName])}),ApplicationConfiguration.registerModule("core"),ApplicationConfiguration.registerModule("users"),angular.module("core").config(["$stateProvider","$urlRouterProvider",function($stateProvider,$urlRouterProvider){$urlRouterProvider.otherwise("/"),$stateProvider.state("home",{url:"/",templateUrl:"modules/core/views/home.client.view.html"})}]),angular.module("core").controller("HeaderController",["$scope","Authentication","Menus",function($scope,Authentication,Menus){return $scope.authentication=Authentication,$scope.isCollapsed=!1,$scope.menu=Menus.getMenu("topbar"),$scope.toggleCollapsibleMenu=function(){$scope.isCollapsed=!$scope.isCollapsed},$scope.$on("$stateChangeSuccess",function(){$scope.isCollapsed=!1})}]),angular.module("core").controller("TextController",["$scope","$http","$stateParams","$location","Authentication","$document","AlertService",function($scope,$http,$stateParams,$location,Authentication,$document,AlertService){var DEBUG,cd,cm,cy,daysInMonth;DEBUG=1,$scope.current_date=new Date,cm=$scope.current_date.getMonth(),cy=$scope.current_date.getFullYear(),cd=$scope.current_date.getDate(),$scope.date_to_show=new Date($scope.current_date),$scope.month_to_show=$scope.date_to_show.getFullYear()+""+$scope.date_to_show.getMonth(),$scope.curMonth=$scope.date_to_show.yyyymm(),$scope.curDate=$scope.date_to_show.yyyymmdd(),$scope.authentication=Authentication,$scope.historyText="",$scope.text="",$scope.changed=!1,$scope.state="saved",daysInMonth=function(month,year){return new Date(year,month+1,0).getDate()},$scope.nextMonth=function(){$scope.curMonth=$scope.date_to_show.nextMonth().yyyymm()},$scope.prevMonth=function(){$scope.curMonth=$scope.date_to_show.prevMonth().yyyymm()},$scope.getWordCounter=function(){return $scope.text?$scope.text.trim().split(/\s+/).length:void 0},$document.bind("keydown",function(event){return 115!==event.which&&83!==event.which||!event.ctrlKey&&!event.metaKey?!0:($scope.save("ctrls"),event.stopPropagation(),event.preventDefault(),!1)}),$scope.save=function(e){$scope.changed?($scope.state="saving",$http({method:"POST",url:"/texts",data:{text:$scope.text,date:$scope.current_date,counter:$scope.getWordCounter()}}).success(function(data){return data.message?void AlertService.send("danger",data.message,3e3):("ctrls"===e&&AlertService.send("success","Продолжайте!","Сохранение прошло успешно!",2e3),$scope.state="saved",void($scope.changed=!1))}).error(function(){"ctrls"===e&&AlertService.send("danger","Упс!","Сервер не доступен, продолжайте и попробуйте сохраниться через 5 минут!",4e3)})["finally"](function(){})):"ctrls"===e&&AlertService.send("success","Продолжайте!","Ничего не изменилось с прошлого сохранения!",2e3)},$scope.showText=function(date){if($scope.current_date.setHours(0,0,0,0)>new Date($scope.curMonth+"-"+date).setHours(0,0,0,0))date+="",date=2===date.length?date:"0"+date,$scope.hideToday=!0,$scope.curDate=new Date($scope.curMonth+"-"+date),$http.get("/text/"+$scope.curMonth+"-"+date).success(function(data){$scope.historyText=data.text});else{if($scope.current_date.setHours(0,0,0,0)!==new Date($scope.curMonth+"-"+date).setHours(0,0,0,0))return void AlertService.send("info","Машину времени пока изобретаем","Давайте жить сегодняшним днем!",3e3);$scope.hideToday=!1,$scope.historyText="",$scope.curDate=$scope.current_date}},$scope.authentication.user&&AlertService.send("info","С возвращением, "+$scope.authentication.user.displayName,"Давайте писать!",3e3),$scope.$watch("text",function(newVal,oldVal){$scope.changed=newVal!==oldVal&&""!==oldVal,$scope.changed&&($scope.state="notsaved",$scope.days[cd-1]=$scope.getWordCounter())}),$scope.$watch("curMonth",function(){var request_string,sd,sm,sy;sm=$scope.date_to_show.getMonth(),sy=$scope.date_to_show.getFullYear(),sd=$scope.date_to_show.getDate(),request_string=sy+"-"+("0"+(sm+1)).slice(-2),$scope.isCurrentMonth=sm===cm&&sy===cy,$http.get("/texts/"+request_string).success(function(data){var daysN,limit,_ref;daysN=daysInMonth(sm,sy),$scope.days=Array.apply(null,new Array(daysN)).map(Number.prototype.valueOf,0),$scope.isCurrentMonth&&(limit=cd),data.forEach(function(e){$scope.days[new Date(e.date).getDate()-1]=e.counter}),limit&&([].splice.apply($scope.days,[limit,daysN-limit+1].concat(_ref=Array.apply(null,new Array(daysN-limit)).map(String.prototype.valueOf,"--"))),_ref)})}),$http({method:"GET",url:"/today"}).success(function(data){$scope.text=data.text,$scope.state="saved",setInterval($scope.save,1e4)}).error(function(){})}]),angular.module("core").directive("callbackform",[function(){return{templateUrl:"modules/core/views/callbackform.client.view.html",restrict:"E",link:function(scope,element){element.on("click",function(e){e.preventDefault(),e.stopPropagation()})}}}]),angular.module("core").directive("text",[function(){return{templateUrl:"modules/core/views/text.client.view.html",restrict:"E",link:function(){}}}]),angular.module("core").directive("timeline",[function(){return{templateUrl:"modules/core/views/timeline.client.view.html",restrict:"E",link:function(){}}}]),Date.prototype.yyyymm=function(){var mm,yyyy;return yyyy=this.getFullYear().toString(),mm=(this.getMonth()+1).toString(),yyyy+"-"+(2===mm.length?mm:"0"+mm)},Date.prototype.yyyymmdd=function(){var dd,mm,yyyy;return yyyy=this.getFullYear().toString(),mm=(this.getMonth()+1).toString(),dd=this.getDate().toString(),yyyy+"-"+(2===mm.length?mm:"0"+mm)+"-"+(2===dd.length?dd:"0"+dd)},Date.prototype.nextMonth=function(){return new Date(this.setMonth(this.getMonth()+1))},Date.prototype.prevMonth=function(){return new Date(this.setMonth(this.getMonth()-1))},angular.module("core").factory("AlertService",["$timeout","$rootScope",function($timeout,$rootScope){var AlertService;return AlertService={},$rootScope.alerts=[],AlertService.send=function(type,title,msg,timeout){$rootScope.alerts.push({type:type,title:title,msg:msg,close:function(){return AlertService.closeAlert(this)}}),"undefined"==typeof timeout&&(timeout=7e3),timeout&&$timeout(function(){AlertService.closeAlert(this)},timeout)},AlertService.closeAlert=function(alert){return this.closeAlertIdx($rootScope.alerts.indexOf(alert))},AlertService.closeAlertIdx=function(index){return $rootScope.alerts.splice(index,1)},AlertService}]),angular.module("core").factory("DateService",[function(){var date_to_show,today;return today=new Date,date_to_show=new Date,{getTodayISO:function(){return today},getTodayString:function(){return today.yyyymmdd()},getTodayDay:function(){return today.getDate()},getTodayMonthString:function(){return today.yyyymm()},daysInMonth:function(){return new Date(year,month+1,0).getDate()},nextMonthString:function(date){return new Date(date.setMonth(date.getMonth()+1)).yyyymm()},prevMonthString:function(date){return new Date(date.setMonth(date.getMonth()-1)).yyyymm()}}}]),angular.module("core").factory("DateService",[function(){var date_to_show,today;return today=new Date,date_to_show=new Date,{getTodayISO:function(){return today},getTodayString:function(){return today.yyyymmdd()},getTodayDay:function(){return today.getDate()},getTodayMonthString:function(){return today.yyyymm()},daysInMonth:function(){return new Date(year,month+1,0).getDate()},nextMonthString:function(date){return new Date(date.setMonth(date.getMonth()+1)).yyyymm()},prevMonthString:function(date){return new Date(date.setMonth(date.getMonth()-1)).yyyymm()}}}]),angular.module("core").service("Menus",[function(){this.defaultRoles=["*"],this.menus={};var shouldRender=function(user){if(!user)return this.isPublic;if(~this.roles.indexOf("*"))return!0;for(var userRoleIndex in user.roles)for(var roleIndex in this.roles)if(this.roles[roleIndex]===user.roles[userRoleIndex])return!0;return!1};this.validateMenuExistance=function(menuId){if(menuId&&menuId.length){if(this.menus[menuId])return!0;throw new Error("Menu does not exists")}throw new Error("MenuId was not provided")},this.getMenu=function(menuId){return this.validateMenuExistance(menuId),this.menus[menuId]},this.addMenu=function(menuId,isPublic,roles){return this.menus[menuId]={isPublic:isPublic||!1,roles:roles||this.defaultRoles,items:[],shouldRender:shouldRender},this.menus[menuId]},this.removeMenu=function(menuId){this.validateMenuExistance(menuId),delete this.menus[menuId]},this.addMenuItem=function(menuId,menuItemTitle,menuItemURL,menuItemType,menuItemUIRoute,isPublic,roles,position){return this.validateMenuExistance(menuId),this.menus[menuId].items.push({title:menuItemTitle,link:menuItemURL,menuItemType:menuItemType||"item",menuItemClass:menuItemType,uiRoute:menuItemUIRoute||"/"+menuItemURL,isPublic:null===isPublic||"undefined"==typeof isPublic?this.menus[menuId].isPublic:isPublic,roles:null===roles||"undefined"==typeof roles?this.menus[menuId].roles:roles,position:position||0,items:[],shouldRender:shouldRender}),this.menus[menuId]},this.addSubMenuItem=function(menuId,rootMenuItemURL,menuItemTitle,menuItemURL,menuItemUIRoute,isPublic,roles,position){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)this.menus[menuId].items[itemIndex].link===rootMenuItemURL&&this.menus[menuId].items[itemIndex].items.push({title:menuItemTitle,link:menuItemURL,uiRoute:menuItemUIRoute||"/"+menuItemURL,isPublic:null===isPublic||"undefined"==typeof isPublic?this.menus[menuId].items[itemIndex].isPublic:isPublic,roles:null===roles||"undefined"==typeof roles?this.menus[menuId].items[itemIndex].roles:roles,position:position||0,shouldRender:shouldRender});return this.menus[menuId]},this.removeMenuItem=function(menuId,menuItemURL){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)this.menus[menuId].items[itemIndex].link===menuItemURL&&this.menus[menuId].items.splice(itemIndex,1);return this.menus[menuId]},this.removeSubMenuItem=function(menuId,submenuItemURL){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)for(var subitemIndex in this.menus[menuId].items[itemIndex].items)this.menus[menuId].items[itemIndex].items[subitemIndex].link===submenuItemURL&&this.menus[menuId].items[itemIndex].items.splice(subitemIndex,1);return this.menus[menuId]},this.addMenu("topbar")}]),angular.module("users").config(["$httpProvider",function($httpProvider){$httpProvider.interceptors.push(["$q","$location","Authentication",function($q,$location,Authentication){return{responseError:function(rejection){switch(rejection.status){case 401:Authentication.user=null,$location.path("signin");break;case 403:}return $q.reject(rejection)}}}])}]),angular.module("users").config(["$stateProvider",function($stateProvider){$stateProvider.state("profile",{url:"/settings/profile",templateUrl:"modules/users/views/settings/edit-profile.client.view.html"}).state("password",{url:"/settings/password",templateUrl:"modules/users/views/settings/change-password.client.view.html"}).state("accounts",{url:"/settings/accounts",templateUrl:"modules/users/views/settings/social-accounts.client.view.html"}).state("signup",{url:"/signup",templateUrl:"modules/users/views/authentication/signup.client.view.html"}).state("signin",{url:"/signin",templateUrl:"modules/users/views/authentication/signin.client.view.html"}).state("forgot",{url:"/password/forgot",templateUrl:"modules/users/views/password/forgot-password.client.view.html"}).state("reset-invalid",{url:"/password/reset/invalid",templateUrl:"modules/users/views/password/reset-password-invalid.client.view.html"}).state("reset-success",{url:"/password/reset/success",templateUrl:"modules/users/views/password/reset-password-success.client.view.html"}).state("reset",{url:"/password/reset/:token",templateUrl:"modules/users/views/password/reset-password.client.view.html"})}]),angular.module("users").controller("AuthenticationController",["$scope","$http","$location","Authentication",function($scope,$http,$location,Authentication){$scope.authentication=Authentication,$scope.authentication.user&&$location.path("/"),$scope.signup=function(){$http.post("/auth/signup",$scope.credentials).success(function(response){$scope.authentication.user=response,$location.path("/")}).error(function(response){$scope.error=response.message})},$scope.signin=function(){$http.post("/auth/signin",$scope.credentials).success(function(response){$scope.authentication.user=response,$location.path("/")}).error(function(response){$scope.error=response.message})}}]),angular.module("users").controller("PasswordController",["$scope","$stateParams","$http","$location","Authentication",function($scope,$stateParams,$http,$location,Authentication){$scope.authentication=Authentication,$scope.authentication.user&&$location.path("/"),$scope.askForPasswordReset=function(){$scope.success=$scope.error=null,$http.post("/auth/forgot",$scope.credentials).success(function(response){$scope.credentials=null,$scope.success=response.message}).error(function(response){$scope.credentials=null,$scope.error=response.message})},$scope.resetUserPassword=function(){$scope.success=$scope.error=null,$http.post("/auth/reset/"+$stateParams.token,$scope.passwordDetails).success(function(response){$scope.passwordDetails=null,Authentication.user=response,$location.path("/password/reset/success")}).error(function(response){$scope.error=response.message})}}]),angular.module("users").controller("SettingsController",["$scope","$http","$location","Users","Authentication",function($scope,$http,$location,Users,Authentication){$scope.user=Authentication.user,$scope.user||$location.path("/"),$scope.hasConnectedAdditionalSocialAccounts=function(){for(var i in $scope.user.additionalProvidersData)return!0;return!1},$scope.isConnectedSocialAccount=function(provider){return $scope.user.provider===provider||$scope.user.additionalProvidersData&&$scope.user.additionalProvidersData[provider]},$scope.removeUserSocialAccount=function(provider){$scope.success=$scope.error=null,$http["delete"]("/users/accounts",{params:{provider:provider}}).success(function(response){$scope.success=!0,$scope.user=Authentication.user=response}).error(function(response){$scope.error=response.message})},$scope.updateUserProfile=function(isValid){if(isValid){$scope.success=$scope.error=null;var user=new Users($scope.user);user.$update(function(response){$scope.success=!0,Authentication.user=response},function(response){$scope.error=response.data.message})}else $scope.submitted=!0},$scope.changeUserPassword=function(){$scope.success=$scope.error=null,$http.post("/users/password",$scope.passwordDetails).success(function(){$scope.success=!0,$scope.passwordDetails=null}).error(function(response){$scope.error=response.message})}}]),angular.module("users").factory("Authentication",[function(){var _this=this;return _this._data={user:window.user},_this._data}]),angular.module("users").factory("Users",["$resource",function($resource){return $resource("users",{},{update:{method:"PUT"}})}]);